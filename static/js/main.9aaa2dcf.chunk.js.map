{"version":3,"sources":["reducers/anecdoteReducer.js","components/AnecdoteForm.js","components/AnecdoteList.js","App.js","index.js"],"names":["asObject","anecdote","content","id","Math","random","toFixed","votes","initialState","map","reducer","state","action","type","payload","anecdoteToVote","find","changedAnecdote","concat","AnecdoteForm","useState","errorNotification","setErrorNotification","successNotification","setSuccessNotification","dispatch","useDispatch","ErrorNotification","message","className","SuccessNotification","onSubmit","event","preventDefault","target","value","length","setTimeout","createAnacedote","name","AnecdoteList","anecdotes","useSelector","sort","a","b","onClick","App","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"6MAWMA,EAAW,SAACC,GAChB,MAAO,CACLC,QAASD,EACTE,IALiB,IAASC,KAAKC,UAAUC,QAAQ,GAMjDC,MAAO,IAILC,EAnBmB,CACvB,gCACA,6DACA,+LACA,kHACA,kDACA,sLAaoCC,IAAIT,GAqD3BU,EApDC,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,iBACH,IAAMV,EAAKS,EAAOE,QAAQX,GACpBY,EAAiBJ,EAAMK,MAAK,SAACf,GAAD,OAAcA,EAASE,KAAOA,KAC1Dc,EAAe,2BAChBF,GADgB,IAEnBR,MAAOQ,EAAeR,MAAQ,IAEhC,OAAOI,EAAMF,KAAI,SAACR,GAAD,OACfA,EAASE,IAAMA,EAAKc,EAAkBhB,KAG1C,IAAK,kBACH,OAAOU,EAAMO,OAAOlB,EAASY,EAAOE,QAAQZ,UAE9C,QACE,OAAOS,I,eC4BEQ,EA3DM,WAAO,IAAD,EACyBC,mBAAS,MADlC,mBAClBC,EADkB,KACCC,EADD,OAE6BF,mBAAS,MAFtC,mBAElBG,EAFkB,KAEGC,EAFH,KAGnBC,EAAWC,cAqBXC,EAAoB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OAAKA,EAEH,qBAAKC,UAAU,QAAf,SACE,4BAAID,MAHa,MAQjBE,EAAsB,SAAC,GAAiB,IAAfF,EAAc,EAAdA,QAC7B,OAAKA,EAEH,qBAAKC,UAAU,UAAf,SACE,4BAAID,MAHa,MAQvB,OACE,gCACE,qDAEA,cAACE,EAAD,CAAqBF,QAASL,IAC9B,cAACI,EAAD,CAAmBC,QAASP,IAE5B,uBAAMU,SA5CW,SAACC,GACpBA,EAAMC,iBACN,IAAM/B,EAAU8B,EAAME,OAAOjC,SAASkC,MACtC,GAAIjC,EAAQkC,OAAS,EAKnB,OAJAd,EAAqB,+BACrBe,YAAW,WACTf,EAAqB,QACpB,KAILG,ED2B2B,SAACvB,GAC9B,MAAO,CACLW,KAAM,kBACNC,QAAS,CACPZ,YC/BOoC,CAAgBpC,IACzBsB,EAAuB,YAAD,OAAatB,EAAb,wBACtBmC,YAAW,WACTb,EAAuB,QACtB,KACHQ,EAAME,OAAOjC,SAASkC,MAAQ,IA4B5B,UACE,8BACE,uBAAOI,KAAK,eAEd,wBAAQ1B,KAAK,SAAb,2BChCO2B,EAvBM,WACnB,IAAMC,EAAYC,aAAY,SAAC/B,GAAD,OAAWA,KACnCc,EAAWC,cAEjB,OACE,8BACGe,EACEE,MAAK,SAACC,EAAGC,GAAJ,OAAWA,EAAEtC,MAAQqC,EAAErC,SAC5BE,KAAI,SAACR,GAAD,OACH,sBAAK4B,UAAU,UAAf,UACE,8BAAM5B,EAASC,UACf,uCACOD,EAASM,MACd,wBAAQuC,QAAS,kBAAMrB,EF0B5B,CACLZ,KAAM,iBACNC,QAAS,CAAEX,GE5B6CF,EAASE,OAAvD,uBAJ0BF,EAASE,UCClC4C,EAVH,WACV,OACE,gCACE,2CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCFAC,EAAQC,YACZvC,EACAwC,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.9aaa2dcf.chunk.js","sourcesContent":["const anecdotesAtStart = [\r\n  \"If it hurts, do it more often\",\r\n  \"Adding manpower to a late software project makes it later!\",\r\n  \"The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.\",\r\n  \"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\",\r\n  \"Premature optimization is the root of all evil.\",\r\n  \"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.\",\r\n];\r\n\r\nconst getId = () => (100000 * Math.random()).toFixed(0);\r\n\r\nconst asObject = (anecdote) => {\r\n  return {\r\n    content: anecdote,\r\n    id: getId(),\r\n    votes: 0,\r\n  };\r\n};\r\n\r\nconst initialState = anecdotesAtStart.map(asObject);\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT_VOTE\":\r\n      const id = action.payload.id;\r\n      const anecdoteToVote = state.find((anecdote) => anecdote.id === id);\r\n      const changedAnecdote = {\r\n        ...anecdoteToVote,\r\n        votes: anecdoteToVote.votes + 1,\r\n      };\r\n      return state.map((anecdote) =>\r\n        anecdote.id == id ? changedAnecdote : anecdote\r\n      );\r\n\r\n    case \"CREATE_ANECDOTE\":\r\n      return state.concat(asObject(action.payload.content));\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//action creators\r\nexport const incrementVote = (id) => {\r\n  return {\r\n    type: \"INCREMENT_VOTE\",\r\n    payload: { id },\r\n  };\r\n};\r\n\r\nexport const createAnacedote = (content) => {\r\n  return {\r\n    type: \"CREATE_ANECDOTE\",\r\n    payload: {\r\n      content,\r\n    },\r\n  };\r\n};\r\n\r\nexport const successNotification = (notificationMessage) => {\r\n  return {\r\n    type: \"success\",\r\n    payload: { notificationMessage },\r\n  };\r\n};\r\n\r\nexport const errorNotification = (notificationMessage) => {\r\n  return {\r\n    type: \"error\",\r\n    payload: { notificationMessage },\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createAnacedote } from \"../reducers/anecdoteReducer\";\r\n// import Notification from \"../components/Notification\";\r\nimport \"../App.css\";\r\n\r\nconst AnecdoteForm = () => {\r\n  const [errorNotification, setErrorNotification] = useState(null);\r\n  const [successNotification, setSuccessNotification] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    const content = event.target.anecdote.value;\r\n    if (content.length < 5) {\r\n      setErrorNotification(\"Enter a valid anecdote\");\r\n      setTimeout(() => {\r\n        setErrorNotification(null);\r\n      }, 5000);\r\n      return;\r\n    }\r\n\r\n    dispatch(createAnacedote(content));\r\n    setSuccessNotification(`Anecdote ${content} added successfully`);\r\n    setTimeout(() => {\r\n      setSuccessNotification(null);\r\n    }, 5000);\r\n    event.target.anecdote.value = \"\";\r\n  };\r\n\r\n  const ErrorNotification = ({ message }) => {\r\n    if (!message) return null;\r\n    return (\r\n      <div className=\"error\">\r\n        <p>{message}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const SuccessNotification = ({ message }) => {\r\n    if (!message) return null;\r\n    return (\r\n      <div className=\"success\">\r\n        <p>{message}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create New Anecdote</h2>\r\n\r\n      <SuccessNotification message={successNotification} />\r\n      <ErrorNotification message={errorNotification} />\r\n\r\n      <form onSubmit={handleCreate}>\r\n        <div>\r\n          <input name=\"anecdote\" />\r\n        </div>\r\n        <button type=\"submit\">create</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnecdoteForm;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { incrementVote } from \"../reducers/anecdoteReducer\";\r\n\r\nconst AnecdoteList = () => {\r\n  const anecdotes = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      {anecdotes\r\n        .sort((a, b) => (b.votes - a.votes))\r\n        .map((anecdote) => (\r\n          <div className=\"wrapper\" key={anecdote.id}>\r\n            <div>{anecdote.content}</div>\r\n            <div>\r\n              has {anecdote.votes}\r\n              <button onClick={() => dispatch(incrementVote(anecdote.id))}>\r\n                vote\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnecdoteList;\r\n","import React from \"react\";\r\nimport AnecdoteForm from \"./components/AnecdoteForm\";\r\nimport AnecdoteList from \"./components/AnecdoteList\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <h2>Anecdotes</h2>\r\n      <AnecdoteForm />\r\n      <AnecdoteList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport reducer from \"./reducers/anecdoteReducer\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}